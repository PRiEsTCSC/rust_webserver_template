[template]
cargo_generate_version = ">=0.18.0"


[placeholders.description]
type = "string"
prompt = "Provide a short description of your project. This will appear in Cargo.toml and documentation."
default = "A Rust web server application built with Actix"

[placeholders.author_name]
type = "string"
prompt = "Enter your name. This will be listed as the author in Cargo.toml."
default = "Your Name"

[placeholders.database]
prompt = "Choose your database:    - postgres: PostgreSQL, a powerful relational database (requires a server).    - mysql: MySQL, a popular relational database (requires a server).    - sqlite: SQLite, a lightweight, file-based database (no server needed)."
type = "string"
choices = ["postgres", "mysql", "sqlite"]
default = "sqlite"
description = "The database backend for your project."

[placeholders.db_name]
type = "string"
prompt = "Enter the name of your database (e.g., 'mydb'). For SQLite, this will be the file name (e.g., 'mydb.sqlite')."
default = "mydb"
regex = "^[a-zA-Z][a-zA-Z0-9_-]*$"
description = "The name of the database used in the DATABASE_URL."

[placeholders.include_env]
type = "bool"
prompt = "Do you want to generate a .env file? This will create a .env file with HOST, PORT, and DATABASE_URL settings based on your inputs."
default = true

[placeholders.include_logging]
type = "bool"
prompt = "Do you want to include logging? This adds the log and log4rs crates for detailed logging to debug and monitor your application."
default = true

[placeholders.include_cors]
type = "bool"
prompt = "Do you want to include CORS support? This enables Cross-Origin Resource Sharing, needed if your API is accessed by web browsers from different domains."
default = true

[placeholders.server_port]
type = "string"
prompt = "Specify the port for your server (e.g., '8080'). You can change this later in the .env file."
default = "8080"
regex = "^[0-9]+$"
description = "The port your web server will listen on."

[placeholders.use_docker]
type = "bool"
prompt = "Do you want to include Docker configuration? This generates a Dockerfile and docker-compose.yml to run your app and database in containers."
default = false

# Conditional file generation (new additions)
[[templates.conditions]]
condition = "include_env"
include = [".env"]

[[templates.conditions]]
condition = "include_logging"
include = ["log4rs.yaml"]

[[templates.conditions]]
condition = "include_cors"
include = ["src/middleware/cors_mgt.rs"]

[[templates.conditions]]
condition = "use_docker"
include = ["Dockerfile", "docker-compose.yaml"]

# # Database-specific files
# [[conditional]]
# condition = "database == 'postgres'"
# include = ["migrations/postgres/*"]

# [[conditional]]
# condition = "database == 'mysql'"
# include = ["migrations/mysql/*"]

# [[conditional]]
# condition = "database == 'sqlite'"
# include = ["migrations/sqlite/*"]

# # Docker+database combinations
# [[conditional]]
# condition = "use_docker && database == 'postgres'"
# include = ["docker/postgres-service.yml"]

# [[conditional]]
# condition = "use_docker && database == 'mysql'"
# include = ["docker/mysql-service.yml"]